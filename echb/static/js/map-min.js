class App{constructor(e,s,t,i){this.regions=e,this.churches=s,this.gMap=t,this.helper=i,this.closestChurchesCount=6,this.showRegions(),this.showChurches(),this.initializeClosestChurches(),this.userPosition={}}showRegions(){document.getElementById("regions").innerHTML=tmpl("regions-list",this.regions),$("#regions").on("click","li a",function(e){return $(".regions-list__link").removeClass("regions-list__link--active"),$(this).addClass("regions-list__link--active"),!1}),$("#regions").on("click","li a",()=>(this.gMap.filterChurches(this.filterByRegion),!1))}initializeClosestChurches(){$("#closestChurches").on("click",()=>{this.helper.getUserCoordinates(),this.helper.userPosition&&this.gMap.filterChurches(this.filterByUserPosition)})}filterByRegion(e){const s=document.getElementsByClassName("regions-list__link--active")[0].dataset.region;return 0==s||e.regionId==s}addDistanceFromUserPosition(e){this.churches.forEach(s=>{var t=rad(mlat-e.lat),i=rad(mlng-e.lng),o=Math.sin(t/2)*Math.sin(t/2)+Math.cos(this.getRadian(e.lat))*Math.cos(this.getRadian(e.lat))*Math.sin(i/2)*Math.sin(i/2),n=2*Math.atan2(Math.sqrt(o),Math.sqrt(1-o));s.distanceFromUser=6371*n})}filterByUserPosition(e){if(this.userPosition){this.addDistanceFromUserPosition(userPosition),this.getClosestChurches().forEach(s=>e.churchId==s.pk)}}getClosestChurches(){return this.churches.sort((e,s)=>e.distance-s.distance),churches.slice(0,this.closestChurchesCount)}showChurches(){const e=[];this.churches.forEach(s=>{let t=this.gMap.createGmapMarker(s);this.gMap.addChurchClickListener(s,t),e.push(t)}),this.gMap.addMarkersToMap(e)}}class Data{constructor(e,s){this.regionsUrl=e,this.churchesUrl=s,this.regionsData=[]}getPromise(){return new Promise((e,s)=>this.getRegions(e))}getRegions(e,s){fetch(this.regionsUrl).then(e=>e.json()).then(s=>this.getChurches(s,e))}getChurches(e,s){this.regionsData=e,fetch(this.churchesUrl).then(e=>e.json()).then(t=>{let i=this.addRegionNameToChurch(e,t);s(i)})}addRegionNameToChurch(e,s){let t={};return t.regions=e,t.churches=s.map(e=>(e.fields.region_name=this.getRegionNameById(e.fields.region),e)),t}getRegionNameById(e){return this.regionsData.filter(s=>s.pk==e)[0].fields.name}}class GMapServices{constructor(e,s,t,i,o){this.map=this.createMap(e,s,t,i),this.map.gmarkers=[],this.directionsService=new o.maps.DirectionsService,this.directionsDisplay=new o.maps.DirectionsRenderer,this.infoWindow=new o.maps.InfoWindow}createMap(e,s,t,i){return new google.maps.Map(document.getElementById(i),{center:{lat:e,lng:s},zoom:t})}addChurchClickListener(e,s){google.maps.event.addListener(s,"click",function(e,s,t){const i=tmpl("church-info-gmap",e.fields);return function(){t.setContent(i),t.open(this.map,s)}}(e,s,this.infoWindow))}createGmapMarker(e){return new google.maps.Marker({position:new google.maps.LatLng(e.fields.lat,e.fields.lng),map:this.map,regionId:e.fields.region,churchId:e.pk,icon:"/static/img/church-gmap.png"})}filterChurches(e){var s=new google.maps.LatLngBounds;this.map.gmarkers.forEach(t=>{if(e(t)){let e=new google.maps.LatLng(t.position.lat(),t.position.lng());s.extend(e),t.setVisible(!0)}else t.setVisible(!1)}),this.map.fitBounds(s)}getRadian(e){return e*Math.PI/180}calculateRoute(e,s){const t=new google.maps.LatLng(userPosition.lat,userPosition.lng),i=new google.maps.LatLng(e,s);let o=new google.maps.LatLngBounds;o.extend(t),o.extend(i),map.fitBounds(o);const n={origin:t,destination:i,travelMode:google.maps.TravelMode.DRIVING};this.directionsService.route(n,function(e,s){s==google.maps.DirectionsStatus.OK?(directionsDisplay.setDirections(e),directionsDisplay.setMap(map)):console.log("Directions Request from "+t.toUrlValue(6)+" to "+i.toUrlValue(6)+" failed: "+s)})}addMarkersToMap(e){this.map.gmarkers=e}}class Helper{constructor(){this.userPosition={}}getUserCoordinates(){let e={};navigator.geolocation?(navigator.geolocation.getCurrentPosition(this.success,function(){showMessage("Невозможно определить ваше положение.")}),console.log(`outside: ${e}`)):showMessage("Ваш браузер не поддерживает функцию Геолокации.")}success(e){var s=e.coords;console.log("Your current position is:"),console.log(`Latitude : ${s.latitude}`),console.log(`Longitude: ${s.longitude}`),console.log(`More or less ${s.accuracy} meters.`)}showMessage(e){$("#messages").innerHTML=e}}